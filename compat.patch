diff --cc include/v8.h
index 13b40db28e,6dd27b9c23..0000000000
--- a/include/v8.h
+++ b/include/v8.h
@@@ -10829,15 -10889,8 +10914,15 @@@ V8_INLINE void PersistentBase<T>::SetWe
      P* parameter, typename WeakCallbackInfo<P>::Callback callback,
      WeakCallbackType type) {
    typedef typename WeakCallbackInfo<void>::Callback Callback;
 +#if (__GNUC__ >= 8) && !defined(__clang__)
 +#pragma GCC diagnostic push
 +#pragma GCC diagnostic ignored "-Wcast-function-type"
 +#endif
-   V8::MakeWeak(reinterpret_cast<internal::Address*>(this->val_), parameter,
+   V8::MakeWeak(reinterpret_cast<internal::Object**>(this->val_), parameter,
                 reinterpret_cast<Callback>(callback), type);
 +#if (__GNUC__ >= 8) && !defined(__clang__)
 +#pragma GCC diagnostic pop
 +#endif
  }
  
  template <class T>
diff --cc src/libplatform/default-platform.cc
index 649a47f629,8d31ee3b04..0000000000
--- a/src/libplatform/default-platform.cc
+++ b/src/libplatform/default-platform.cc
@@@ -45,13 -45,16 +45,23 @@@ std::unique_ptr<v8::Platform> NewDefaul
    return platform;
  }
  
+ v8::Platform* CreateDefaultPlatform(
+     int thread_pool_size, IdleTaskSupport idle_task_support,
+     InProcessStackDumping in_process_stack_dumping,
+     v8::TracingController* tracing_controller) {
+   return NewDefaultPlatform(
+              thread_pool_size, idle_task_support, in_process_stack_dumping,
+              std::unique_ptr<v8::TracingController>(tracing_controller))
+       .release();
+ }
+ 
 +V8_PLATFORM_EXPORT std::unique_ptr<JobHandle> NewDefaultJobHandle(
 +    Platform* platform, TaskPriority priority,
 +    std::unique_ptr<JobTask> job_task, size_t num_worker_threads) {
 +  return std::make_unique<DefaultJobHandle>(std::make_shared<DefaultJobState>(
 +      platform, std::move(job_task), priority, num_worker_threads));
 +}
 +
  bool PumpMessageLoop(v8::Platform* platform, v8::Isolate* isolate,
                       MessageLoopBehavior behavior) {
    return static_cast<DefaultPlatform*>(platform)->PumpMessageLoop(isolate,
