From a40a8f37cd4c546084fdfe6ebc46299ff1c90f3f Mon Sep 17 00:00:00 2001
From: Gary Mathews <gmathews@appcelerator.com>
Date: Mon, 1 May 2017 13:52:17 +0100
Subject: [PATCH] NDK14

---
 DEPS                     |  2 --
 Makefile                 |  7 +++++++
 Makefile.android         | 10 ++++++++++
 gypfiles/standalone.gypi | 17 +++++++----------
 src/v8.gyp               | 12 ++++++++++--
 5 files changed, 34 insertions(+), 14 deletions(-)

diff --git a/DEPS b/DEPS
index 161015d..abc7071 100644
--- a/DEPS
+++ b/DEPS
@@ -44,6 +44,4 @@ deps = {
 
 deps_os = {
   "android": {
-    "v8/third_party/android_tools":
-      Var("chromium_url") + "/android_tools.git" + "@" + "b43a6a289a7588b1769814f04dd6c7d7176974cc",
     "v8/third_party/catapult":
diff --git a/Makefile b/Makefile
index 6eeac09..66ed3e5 100644
--- a/Makefile
+++ b/Makefile
@@ -36,6 +36,13 @@ ANDROID_V8 ?= /data/local/tmp/v8
 
 # Special build flags. Use them like this: "make library=shared"
 
+# inspector=on/off
+ifeq ($(inspector), on)
+  GYPFLAGS += -Dv8_enable_inspector=1
+endif
+ifeq ($(inspector), off)
+  GYPFLAGS += -Dv8_enable_inspector=0
+endif
 # library=shared || component=shared_library
 ifeq ($(library), shared)
   GYPFLAGS += -Dcomponent=shared_library
diff --git a/Makefile.android b/Makefile.android
index 4171521..e129be6 100644
--- a/Makefile.android
+++ b/Makefile.android
@@ -35,18 +35,27 @@ MODES = release debug
 ANDROID_BUILDS = $(foreach mode,$(MODES), \
                    $(addsuffix .$(mode),$(ANDROID_ARCHES)))
 
+HOST_OS = $(shell uname -s | sed -e 's/Linux/linux/;s/Darwin/darwin/')
+HOST_ARCH = $(shell uname -m | sed -e 's/i[3456]86/x86/')
+
 ifeq ($(ARCH), android_arm)
   DEFINES  = target_arch=arm v8_target_arch=arm
+  ANDROID_TOOLCHAIN = $(ANDROID_NDK_ROOT)/toolchains/arm-linux-androideabi-4.9/prebuilt/$(HOST_OS)-$(HOST_ARCH)/arm-linux-androideabi/bin
 else ifeq ($(ARCH), android_arm64)
   DEFINES  = target_arch=arm64 v8_target_arch=arm64
+  ANDROID_TOOLCHAIN = $(ANDROID_NDK_ROOT)/toolchains/aarch64-linux-android-4.9/prebuilt/$(HOST_OS)-$(HOST_ARCH)/aarch64-linux-android/bin
 else ifeq ($(ARCH), android_mipsel)
   DEFINES  = target_arch=mipsel v8_target_arch=mipsel
+  ANDROID_TOOLCHAIN = $(ANDROID_NDK_ROOT)/toolchains/mipsel-linux-android-4.9/prebuilt/$(HOST_OS)-$(HOST_ARCH)/mipsel-linux-android/bin
 else ifeq ($(ARCH), android_ia32)
   DEFINES = target_arch=ia32 v8_target_arch=ia32
+  ANDROID_TOOLCHAIN = $(ANDROID_NDK_ROOT)/toolchains/x86-4.9/prebuilt/$(HOST_OS)-$(HOST_ARCH)/i686-linux-android/bin
 else ifeq ($(ARCH), android_x64)
   DEFINES = target_arch=x64 v8_target_arch=x64
+  ANDROID_TOOLCHAIN = $(ANDROID_NDK_ROOT)/toolchains/x86_64-4.9/prebuilt/$(HOST_OS)-$(HOST_ARCH)/x86_64-linux-android/bin
 else ifeq ($(ARCH), android_x87)
   DEFINES = target_arch=ia32 v8_target_arch=x87
+  ANDROID_TOOLCHAIN = $(ANDROID_NDK_ROOT)/toolchains/x86-4.9/prebuilt/$(HOST_OS)-$(HOST_ARCH)/i686-linux-android/bin
 else
   $(error Target architecture "${ARCH}" is not supported)
 endif
@@ -57,6 +66,7 @@ DEFINES += OS=android
 .SECONDEXPANSION:
 $(ANDROID_BUILDS): $(OUTDIR)/Makefile.$$@
 	@$(MAKE) -C "$(OUTDIR)" -f Makefile.$@ \
+	          AR="$(ANDROID_TOOLCHAIN)/ar" \
 	          BUILDTYPE=$(shell echo $(subst .,,$(suffix $@)) | \
 	                      python -c "print raw_input().capitalize()") \
 	          builddir="$(shell pwd)/$(OUTDIR)/$@"
diff --git a/gypfiles/standalone.gypi b/gypfiles/standalone.gypi
index d438a5a..e2e169f 100644
--- a/gypfiles/standalone.gypi
+++ b/gypfiles/standalone.gypi
@@ -395,8 +395,8 @@
                 'android_lib': '<(android_sysroot)/usr/lib',
               }],
             ],
-            'android_libcpp_include': '<(android_stl)/llvm-libc++/libcxx/include',
-            'android_libcpp_abi_include': '<(android_stl)/llvm-libc++abi/libcxxabi/include',
+            'android_libcpp_include': '<(android_stl)/llvm-libc++/include',
+            'android_libcpp_abi_include': '<(android_stl)/llvm-libc++abi/include',
             'android_libcpp_libs': '<(android_stl)/llvm-libc++/libs',
             'android_support_include': '<(android_toolchain)/sources/android/support/include',
             'android_sysroot': '<(android_sysroot)',
@@ -412,8 +412,8 @@
                 'android_lib': '<(android_sysroot)/usr/lib',
               }],
             ],
-            'android_libcpp_include': '<(android_stl)/llvm-libc++/libcxx/include',
-            'android_libcpp_abi_include': '<(android_stl)/llvm-libc++abi/libcxxabi/include',
+            'android_libcpp_include': '<(android_stl)/llvm-libc++/include',
+            'android_libcpp_abi_include': '<(android_stl)/llvm-libc++abi/include',
             'android_libcpp_libs': '<(android_stl)/llvm-libc++/libs',
             'android_support_include': '<(android_ndk_root)/sources/android/support/include',
             'android_sysroot': '<(android_sysroot)',
@@ -1129,13 +1129,13 @@
         'configurations': {
           'Release': {
             'cflags': [
-              '-fomit-frame-pointer',
+              '-fomit-frame-pointer', '-O2'
             ],
           },  # Release
         },  # configurations
         'cflags': [ '-Wno-abi', '-Wall', '-W', '-Wno-unused-parameter'],
         'cflags_cc': [ '-Wnon-virtual-dtor', '-fno-rtti', '-fno-exceptions',
-                       '-std=gnu++11' ],
+                       '-std=c++11' ],
         'target_conditions': [
           ['_toolset=="target"', {
             'cflags!': [
@@ -1247,10 +1247,7 @@
               }],
               ['(target_arch=="arm" or target_arch=="arm64" or target_arch=="x64" or target_arch=="ia32") and component!="shared_library"', {
                 'cflags': [
-                  '-fPIE',
-                ],
-                'ldflags': [
-                  '-pie',
+                  '-fPIC',
                 ],
               }],
             ],
diff --git a/src/v8.gyp b/src/v8.gyp
index 043500b..2cb1ebd 100644
--- a/src/v8.gyp
+++ b/src/v8.gyp
@@ -137,6 +137,7 @@
     {
       'target_name': 'v8_snapshot',
       'type': 'static_library',
+      'standalone_static_library': 1,
       'conditions': [
         ['want_separate_host_toolset==1', {
           'toolsets': ['host', 'target'],
@@ -221,6 +222,7 @@
     {
       'target_name': 'v8_nosnapshot',
       'type': 'static_library',
+      'standalone_static_library': 1,
       'dependencies': [
         'v8_base',
       ],
@@ -253,6 +255,7 @@
     {
       'target_name': 'v8_external_snapshot',
       'type': 'static_library',
+      'standalone_static_library': 1,
       'conditions': [
         [ 'v8_use_external_startup_data==1', {
           'conditions': [
@@ -370,6 +373,7 @@
     {
       'target_name': 'v8_base',
       'type': 'static_library',
+      'standalone_static_library': 1,
       'dependencies': [
         'v8_libbase',
         'v8_libsampler',
@@ -1767,7 +1771,7 @@
     },
     {
       'target_name': 'v8_libbase',
-      'type': '<(component)',
+      'type': 'static_library',
       'variables': {
         'optimize': 'max',
       },
@@ -1856,6 +1860,8 @@
               'USING_V8_BASE_SHARED',
             ],
           },
+        }, {
+          'standalone_static_library': 1,
         }],
         ['OS=="linux"', {
             'link_settings': {
@@ -2064,7 +2070,8 @@
     },
     {
       'target_name': 'v8_libplatform',
-      'type': '<(component)',
+      'type': 'static_library',
+      'standalone_static_library': 1,
       'variables': {
         'optimize': 'max',
       },
@@ -2116,6 +2123,7 @@
     {
       'target_name': 'v8_libsampler',
       'type': 'static_library',
+      'standalone_static_library': 1,
       'variables': {
         'optimize': 'max',
       },
-- 
2.9.3 (Apple Git-75)

